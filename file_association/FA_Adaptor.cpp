/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp fileassociation_necessaries.xml -a FA_Adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "FA_Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class AssociationAdaptor
 */

AssociationAdaptor::AssociationAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

AssociationAdaptor::~AssociationAdaptor()
{
    // destructor
}

void AssociationAdaptor::addService(const QString &service_domain)
{
    // handle method call file.association.addService
    QMetaObject::invokeMethod(parent(), "addService", Q_ARG(QString, service_domain));
}

void AssociationAdaptor::addType(const QString &service_domain, const QString &type_name)
{
    // handle method call file.association.addType
    QMetaObject::invokeMethod(parent(), "addType", Q_ARG(QString, service_domain), Q_ARG(QString, type_name));
}

QStringList AssociationAdaptor::getServices()
{
    // handle method call file.association.getServices
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getServices", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QStringList AssociationAdaptor::getServicesByType(const QString &type_name)
{
    // handle method call file.association.getServicesByType
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getServicesByType", Q_RETURN_ARG(QStringList, out0), Q_ARG(QString, type_name));
    return out0;
}

QStringList AssociationAdaptor::getTypes(const QString &service_domain)
{
    // handle method call file.association.getTypes
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getTypes", Q_RETURN_ARG(QStringList, out0), Q_ARG(QString, service_domain));
    return out0;
}

void AssociationAdaptor::removeService(const QString &service_domain)
{
    // handle method call file.association.removeService
    QMetaObject::invokeMethod(parent(), "removeService", Q_ARG(QString, service_domain));
}

void AssociationAdaptor::removeType(const QString &service_domain, const QString &type_name)
{
    // handle method call file.association.removeType
    QMetaObject::invokeMethod(parent(), "removeType", Q_ARG(QString, service_domain), Q_ARG(QString, type_name));
}

bool AssociationAdaptor::serviceExist(const QString &service_domain)
{
    // handle method call file.association.serviceExist
    bool out0;
    QMetaObject::invokeMethod(parent(), "serviceExist", Q_RETURN_ARG(bool, out0), Q_ARG(QString, service_domain));
    return out0;
}

